---
layout: "layouts/base.liquid"
pagination: 
  data: housing.housingList
  size: 1
  alias: apartment
permalink: "/housing/affordable-housing/{{apartment.id}}/index.html"
pageClass: "page-housing"
pageHead: '<script src="/js/accessibility.js" defer></script>'
eleventyComputed:
  title: '{{apartment.aptName | default: "Apartment Listing"}}'
---

<h1 translate="no">{{title}}</h1>
{% assign hasTotal = apartment.numTotalUnits and apartment.numTotalUnits > 0 %}
{% capture unitsStr -%}
  {%- if apartment.numRestrictedUnits and apartment.numRestrictedUnits > 0 -%}
    {{apartment.numRestrictedUnits}} affordable
    {%- if hasTotal %}
    of
    {% endif -%}
  {%- endif -%}
  {%- if hasTotal %}
    {{apartment.numTotalUnits}} total
  {% endif -%}
{%- endcapture %}
<table class="deflist">
  {% render "apartment-meta-item" label: "Address", item: apartment.addresses, apartment: apartment %}
  {% render "apartment-meta-item" label: "City", item: apartment.city %}
  {% render "apartment-meta-item" label: "Units", item: unitsStr | strip %}
  {% render "apartment-meta-item" label: "Email", item: apartment.emails %}
  {% render "apartment-meta-item" label: "Phone", item: apartment.phones %}
  {% render "apartment-meta-item" label: "Website", item: apartment.website %}
  {% render "apartment-meta-item" label: "Additional Info", item: apartment.supplementalUrls %}
</table>

{% if apartment.numTotalUnits > 0 and apartment.numRestrictedUnits > 0 %}
  {% assign marketRateFraction = apartment.numTotalUnits | minus: apartment.numRestrictedUnits | divided_by: apartment.numTotalUnits %}
  {% if marketRateFraction < 1.0 and marketRateFraction > 0.1 %}
    <p class="note">
      {{marketRateFraction | times: 100 | round}}% of rental units at this property are full-price market-rate units.  Be sure to inquire specifically about below-market-rate (BMR) units when contacting this property.
    </p>
  {% endif %}
{% endif %}
{% assign genPop = "General Population" %}
{% assign specialPopulations = apartment.populationsServed | except: genPop %}
{% assign numSpecialPopulations = specialPopulations | size %}
{% if numSpecialPopulations > 0 %}
  {%- capture ageRangeStr -%}
    {%- if apartment.minAge and apartment.minAge != "" and
           apartment.maxAge and apartment.maxAge != "" %}
      ({{apartment.minAge}} - {{apartment.maxAge}} years)
    {%- elsif apartment.minAge and apartment.minAge != "" %}
      ({{apartment.minAge}}+ years)
    {%- elsif apartment.maxAge and apartment.maxAge != "" %}
      ({{apartment.maxAge}} years and under)
    {%- endif -%}
  {%- endcapture -%}
  <p>
    {% if apartment.populationsServed | includes: genPop %}
      In addition to the general population, this property also specifically serves people who are
    {% else %}
      This property only serves people who are
    {% endif %}
    {%- for population in specialPopulations -%}
      {%- if forloop.first == false -%}
        {%- if forloop.last %}
          or
        {% else -%}
          ,
        {% endif -%}
      {%- endif -%}
      {{- population | downcase -}}
      {%- if population == "Seniors" or population == "Youth" -%}
        {{- ageRangeStr -}}
      {%- endif -%}
    {%- endfor -%}.
  </p>
{% endif %}

{% if apartment.prefersLocalApplicants %}
  <p>
    When selecting residents, this property gives preference to those who work or live in {{apartment.city | default: "the local city"}}.
  </p>
{% endif %}

{% if apartment.disallowsPublicApps %}
  <p>
    A referral from a housing agency is required to apply for this property. Contact the property for details on the referral process.
  </p>
{% endif %}

<div class="rent_tables">
  {% assign defaultNoDataStr = "Call for info" %}
  {% comment %}
  Min & max occupancy are nested deep within the unit object, so we group by the
  dedicated top-level 'occupancyGroup' property which just lists the min and
  max as 'min,max'. This is to avoid supporting nested grouping keys in the
  groupBy function.
  {% endcomment %}
  {% assign groupByKeys = "type,openStatus,occupancyGroup" | split: "," %}
  {% assign sortKeys = "key0,key1,key2" | split: "," %}
  {% assign unitsByType = apartment.units | groupBy: groupByKeys | rankSort: sortKeys %}
  {% comment %}
  Only show the income bracket column in the rent table if there is more than
  one rent offering for that unit type OR there is at least one filled-in
  income bracket value (i.e. % AMI).  If at least one of the unit types for this 
  apartment shows the income bracket column, then it will be showed for all
  of the unit types for consistency.
  {% endcomment %}
  {% assign showIncomeBrackets = false %}
  {% for unitGroup in unitsByType %}
    {% assign numRentOfferings = unitGroup.values | size %}
    {% assign numIncomeBrackets = unitGroup.values | where: "incomeBracket" | size %}
    {% if numRentOfferings > 1 or numIncomeBrackets > 0 %}
      {% assign showIncomeBrackets = true %}
      {% break %}
    {% endif %}
  {% endfor %}
  {% for unitGroup in unitsByType %}
    {% assign units = unitGroup.values | sortUnitOfferings %}
    {% comment %}
    'units' is guaranteed to have at least one item since it is generated
    via grouping. Occupancy limits should always be the same in every entry for
    a given rental property & unit type, so just take the first one here.
    Type, and status are guaranteed to be uniform across all units in this
    group because type and status are the grouping keys.
    {% endcomment %}
    {% assign unitType = units[0].type %}
    {% assign occupancyLimit = units[0].occupancyLimit %}
    {% assign openStatus = units[0].openStatus %}
    {%- capture badgeMod -%}
      {%- if openStatus == "Call for Availability" -%}
        badge__warn
      {%- elsif openStatus == "Waitlist Closed" -%}
        badge__bad
      {%- elsif openStatus == "Waitlist Open" -%}
        badge__ok
      {%- elsif openStatus == "Available" -%}
        badge__highlight
      {%- endif -%}
    {%- endcapture -%}
    <h2>{{unitType | default: ""}}<span class="badge {{badgeMod}}">{{openStatus}}</span></h2> 
    Minimum Occupancy: {{occupancyLimit.min | default: defaultNoDataStr}} {{occupancyLimit.min | pluralize: "person", "people"}}<br/>
    Maximum Occupancy: {{occupancyLimit.max | default: defaultNoDataStr}} {{occupancyLimit.max | pluralize: "person", "people"}}
    <table aria-label="Rent and Income Limits Table">
      <thead>
        <tr>
          {% if showIncomeBrackets %}
            <th>Income bracket</th>
          {% endif %}
          <th>Min income (per year)</th>
          <th>Max income (per year)</th>
          <th>Rent (per month)</th>
        </tr>
      </thead>
      <tbody>
        {% for unit in units %}
          <tr>
            {% if showIncomeBrackets %}
              {% assign defaultBracketStr = "Bracket " | concat: forloop.index %}
              <td>
                {%- if unit.incomeBracket and unit.incomeBracket != "" -%}
                  {{unit.incomeBracket}}% <abbr role="definition" aria-label="Area Median Income"><span translate="no">AMI</span></abbr>
                {%- else -%}
                  {{defaultBracketStr}}
                {%- endif -%}
              </td>
            {% endif %}
            <td>
              {%- if unit.minIncome.amount and unit.minIncome.amount != "" -%}
                {{unit.minIncome.amount | money}}
                {%- if unit.minIncome.rentFactor and unit.minIncome.rentFactor != "" and unit.minIncome.isCalculated %}
                  <p data-toggletip data-toggletip-class="icon_info">Calculated as {{unit.minIncome.rentFactor}} times yearly rent</p>
                {%- endif -%}
              {%- else -%}
                {{defaultNoDataStr}}
              {%- endif -%}
            </td>
            <td>
              {%- if unit.maxIncome.low and unit.maxIncome.low != "" and
                    unit.maxIncome.high and unit.maxIncome.high != "" -%}
                {%- if unit.maxIncome.low == unit.maxIncome.high -%}
                  {{unit.maxIncome.low | money}}
                {%- else -%}
                  {{unit.maxIncome.low | money}} to {{unit.maxIncome.high | money}}
                {%- endif -%}
                {%- capture maxIncomeDetails -%}
                  {%- for hhSize in (1..12) -%}
                    {%- assign sizeName = "size" | append: hhSize -%}
                    {%- unless unit.maxIncome.byHouseholdSize[sizeName] and unit.maxIncome.byHouseholdSize[sizeName] != "" -%}
                      {%- continue -%}
                    {%- endunless -%}
                    {%- if unit.occupancyLimit.max and unit.occupancyLimit.max != "" and
                          hhSize > unit.occupancyLimit.max-%}
                      {%- continue -%}
                    {%- endif -%}
                    {%- if unit.occupancyLimit.min and unit.occupancyLimit.min != "" and
                          hhSize < unit.occupancyLimit.min-%}
                      {%- continue -%}
                    {%- endif -%}
                    Household of {{hhSize}}: {{unit.maxIncome.byHouseholdSize[sizeName] | money}}<br/>
                  {%- endfor -%}
                {%- endcapture -%}
                {%- assign maxIncomeDetails = maxIncomeDetails | strip -%}
                {%- if maxIncomeDetails != "" %}
                  <p data-toggletip data-toggletip-class="icon_info">{{maxIncomeDetails}}</p>
                {%- endif -%}
              {%- else -%}
                {{defaultNoDataStr}}
              {%- endif -%}
            </td>
            <td>
              {%- if unit.rent.amount and unit.rent.amount != "" -%}
                {{unit.rent.amount | money}}
              {%- elsif unit.rent.alternateDesc and unit.rent.alternateDesc != "" -%}
                Varies
                <p data-toggletip data-toggletip-class="icon_info">{{unit.rent.alternateDesc}}</p>
              {%- else -%}
                Call for rent
              {%- endif -%}
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  {% endfor %}
</div>

<p class="float_right">
  <a href="/housing/affordable-housing/feedback" class="noprint">Report an error</a>
</p>

