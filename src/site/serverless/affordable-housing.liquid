---
layout: layouts/base.liquid
title: Find Affordable Housing
permalink: 
  build: "/housing/affordable-housing/index.html"
  serverless: "/housing/affordable-housing/filter"
pageClass: "page-housing"
pageHead: '<script src="/js/accessibility.js" defer></script>
  <script src="/js/transit.js" defer></script>
  <script src="/js/affordable-housing-map.js" defer></script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA17udd4ePocbxKrOkHiMhSUHlvf3daZMs&callback=initMap&v=weekly" defer></script>'
---

{% assign updateButtonStr = "Update results" %}
{% assign query = eleventy.serverless.query %}
{% assign summaryProps = "type,openStatus" | split: "," %}
{% assign housingdb = housing.housingList | filterByQuery: query | summarizeUnits: summaryProps %}
{% assign num_results = housingdb | size %}
{% assign num_filters_applied = query | numFiltersApplied %}
{% capture num_results_snippet %}
  Showing {% if num_filters_applied == 0 %}all {% endif %}{{num_results}} {{num_results | pluralize: "property", "properties"}}
{% endcapture %}

{% comment %}
There is some startup time associated with a Netlify serverless function,
so go ahead and fire it up now in preparation for a user's housing search.
The function should still be 'warm' if the user executes a search in a
reasonable timeframe.
{% endcomment %}
{% unless eleventy.serverless %}
  <link rel="prefetch" href="/.netlify/functions/serverless">
{% endunless %}

<script>
function CopyUrl() {
  navigator.clipboard.writeText(window.location.href);
  document.getElementById("copy-url-done").removeAttribute("hidden");
  return false;
}

// Show a loading message by changing the submit button to say "Loading..."
function ShowLoading() {
  let submitButton = document.getElementById("filter-submit");
  submitButton.value = "Loading...";
  submitButton.disabled = "disabled";
}

function HideLoading() {
  let submitButton = document.getElementById("filter-submit");
  submitButton.value = "{{updateButtonStr}}";
  submitButton.removeAttribute("disabled");
}

function ResetForm() {
  document.getElementById("housing-search").reset();
}

// Show a hidden checkbox with id optionId depending on the value of inputId.
function ToggleHiddenOption(optionId, inputId) {
  let option = document.getElementById(optionId);
  let input = document.getElementById(inputId);
  if (input.value) {
    option.parentElement.removeAttribute("hidden");
  } else {
    option.parentElement.setAttribute("hidden", "hidden");
  }
}

function ToggleRentOption() {
  ToggleHiddenOption("include-unknown-rent", "rent-max");
}

function ToggleIncomeOption() {
  ToggleHiddenOption("include-unknown-income", "income");
}

// If the filtering form GETs the results page's url with
// the anchor hash (e.g. action="/affordable-housing/filter#results")
// then the form submission button will be disabled and the
// page will not reload if the user clicks on the submit button
// without first changing the filter state.  So, to force a 
// page reload every time, have the form GET e.g. 
// /affordable-housing/filter and manually scroll to the anchor
// after the page loads.  Also ensure the rent and income checkboxes
// are shown if those fields are filled. 
{% if num_filters_applied > 0 %} 
function OnDomLoad() {
  ToggleRentOption();
  ToggleIncomeOption();
  location.hash = "#results";
}
document.addEventListener("DOMContentLoaded", function() {
  OnDomLoad();
});
{% endif %}

function OnPageShow() {
  // When the user departs the page by applying filters, the submit
  // button text changes to a loading message.  Ensure that loading
  // message is gone if the user returns to the page via the back
  // navigation arrow.  Also ensure any filter options that were selected
  // prior to navigating away are cleared when navigating back.
  HideLoading();
  ResetForm();
  ToggleRentOption();
  ToggleIncomeOption();
}

window.onpageshow = function() {OnPageShow()};

</script>

<h1>{{title}}
<span class="subtitle">In Santa Clara County</span></h1>
<p class="bold">
{{num_results_snippet}}
</p>
{% if num_filters_applied == 0 %}
<p class="noprint">
Narrow your search with the filter options below or <a href="#results">scroll</a> to the full list of properties 
</p>
{% else %}
<p>
{{num_filters_applied}} {{num_filters_applied | pluralize: "filter is", "filters are"}} applied. <span class="noprint"><a href="/housing/affordable-housing">Clear filters</a></span>
</p>
{% endif %}


<section aria-label="Housing Filter Options">
<form action="/housing/affordable-housing/filter" action="get" id="housing-search" class="housing_search" onsubmit="ShowLoading();">

  {% assign filterValues = housing.housingFilterValues | updateFilterState: query %}

  {% for section in filterValues %}
  <fieldset>
    <legend>{{section.heading}}</legend>
    <div class="option_columns
    {% if section.name == "populationsServed" %} 
      wide
    {% endif %}
    ">
    {% assign sortedOpts = section.options | rankSort: "name" %}
    {% for opt in sortedOpts %}
      {% assign optId = section.name | append : '-' | append: opt.name | downcase | replace: ' ', '-' %}
      <div>
        <input type="checkbox" id="{{optId}}" value="{{opt.name}}" name="{{section.name}}" {% if opt.selected %}checked{% endif %}>
        {% if opt.name == "SRO" %}
            {% assign label = '<abbr role="definition" aria-label="Single Room Occupancy"><span translate="no">SRO</span></abbr>' %}
        {% else %}
            {% assign label = opt.label %}
        {% endif %}
        <label for="{{optId}}"
        {%- if section.name == "city" %}
          translate="no"
        {%- endif -%}
        >{{label}}</label>
      </div>
    {% endfor %}
    </div>
  </fieldset>
  {% endfor %}

  <fieldset>
    <legend>Rent</legend>
    <div>
      <label for="rent-max">Maximum ($ per month)</label>
      <input type="number" oninput="ToggleRentOption();" min="0" id="rent-max" name="rentMax" value="{{query.rentMax | escape}}"><br/>
      <span id="include-unknown-rent-container" hidden>
        <input type="checkbox" id="include-unknown-rent" name="includeUnknownRent"
        {% if num_filters_applied == 0 or query.includeUnknownRent == "on" %}checked{% endif %}>
        <label for="include-unknown-rent">Include properties with no rent information</label>
      </span>
    </div>
  </fieldset>

  <fieldset>
    <legend>Income</legend>
    <div>
      <label for="income">Yearly Income ($)</label>
      <p data-toggletip data-toggletip-class="icon_query">Provide your income to hide properties you are not eligible for. Your information will not be stored.</p>
      <input type="number" oninput="ToggleIncomeOption();" min="0" id="income" name="income" value="{{query.income | escape}}"><br/>
      <span id="include-unknown-income-container" hidden>
        <input type="checkbox" id="include-unknown-income" name="includeUnknownIncome"
        {% if num_filters_applied == 0 or query.includeUnknownIncome == "on" %}checked{% endif %}>
        <label for="include-unknown-income">Include properties with no income limit information</label>
      </span>
    </div>
  </fieldset>

  <fieldset>
    <legend>More Filters</legend>
    <div>
      <input type="checkbox" id="wheelchair-accessible-only" name="wheelchairAccessibleOnly"
        {% if query.wheelchairAccessibleOnly == "on" %}checked{% endif %}>
      <label for="wheelchair-accessible-only">Only show wheelchair-accessible properties</label>
      <br/>
      <input type="checkbox" id="exclude-referrals" name="excludeReferrals"
        {% if query.excludeReferrals == "on" %}checked{% endif %}>
      <label for="exclude-referrals">Hide properties requiring an agency referral</label>
      <p data-toggletip data-toggletip-class="icon_query">  
        Some properties only accept applications by referral through a housing agency and do not allow the general public to apply.
      </p>
      <p>
      <label for="property-name">Property Name</label>
      <input type="text" id="property-name" value="{{query.propertyName | escape}}" name="propertyName">
      </p>
    </div>
  </fieldset>

  <div class="form_controls">
    <input type="submit" id="filter-submit" class="btn btn_primary noprint" value="{{updateButtonStr}}"/>
  </div>
</form>
</section>

<section id="results" class="anchor_context" aria-label="Housing Results">
  <div class="align-right flex stack-reversed">
    <p class="noprint bold">
      {{num_results_snippet}}
    </p>
    <div class="grow_1">
      {% if num_results > 0 %}
        <a class="btn btn_secondary noprint btn_print " title="Get printable summary of results" href="/housing/affordable-housing/table?{{query | queryString}}">
          Show printable summary
        </a>
        <a class="btn btn_secondary noprint" title="Get printable application checklist" href="/housing/affordable-housing/tracker?{{query | queryString}}">
          Show printable checklist
        </a>
        {% comment %} 
        <a class="btn btn_secondary noprint btn_download " title="Download these results in CSV format">
           <svg role="img" aria-hidden="true" focusable="false" class="icon ">
            <use xlink:href="/images/sprites.svg#download"></use>
          </svg>
          CSV
        </a>
        {% endcomment %}
      {% endif %}
    </div>
  </div>
  {% if num_filters_applied > 0 %}
    <p class="noprint collapse_top">To save this search, bookmark this page or <button class="link" onclick="CopyUrl()">copy the URL</button> <span id="copy-url-done" hidden>&#10003;</span></p>
  {% endif %}
    <p>
      <a href="/housing/affordable-housing/feedback" class="noprint">Report an error</a>
    </p>

  <div class="flex results_container">
    <div id="map-toggle" class="noprint hidden">
      <button type="button" class="btn btn_secondary">Show Map</button>
    </div>
    <div id="list-container">
      <ul class="results_list" aria-label="Results List">
        {%- for apartment in housingdb -%}
          {%- capture badges -%}
            {%- assign allStatuses = apartment.units | map: "openStatus" | uniq | rankSort -%}
            {%- for status in allStatuses -%}
              <p>
                {%- capture badgeMod -%}
                  {%- if status == "Call for Availability" -%}
                    badge__warn
                  {%- elsif status == "Waitlist Closed" -%}
                    badge__bad
                  {%- elsif status == "Waitlist Open" -%}
                    badge__ok
                  {%- elsif status == "Available" -%}
                    badge__highlight
                  {%- endif -%}
                {%- endcapture -%}
                <span class="badge {{ badgeMod }}">{{ status }}</span>
                {%- assign sortedUnits = apartment.units | where: "openStatus",  status | rankSort: "type" -%}
                {%- for unit in sortedUnits -%}
                  {%- if unit.type -%}
                    <span class="badge">{{ unit.type }}</span>
                  {%- endif -%}
                {%- endfor -%} 
              </p>
            {%- endfor -%}
          {%- endcapture -%}
          {% comment %}
          The list of apartments can be quite long, and the time it takes to 
          render all of them with eleventy serverless can lead to longer page
          load times.  Since only the badges change within each apartment
          list item, everything else is pre-rendered in the build and used here
          for serverless requests.
          {% endcomment %}
          {%- if eleventy.serverless -%}
            {%- assign prerenderedItem = collections.housingListItems[apartment.id] -%}
            {{- prerenderedItem.heading -}}
            {{badges}}
            {{- prerenderedItem.contacts -}}
          {%- else -%}
            {% comment %}
            The housingListItems collection is not
            available at build time (only after the build), and thus can't be used
            for the static page render.
            {% endcomment %}
            {%- render "affordable-housing-item", apartment: apartment, badges: badges -%}
          {%- endif -%}
        {%- endfor -%}
        {% if num_results == 0 %}
          <li class="no_results">
            Try changing the filter options above to broaden your search and see more results.
          </li>
        {% endif %}
      </ul>
    </div>
    <div id="map-container" class="map_container hidden noprint">
      <div class="split_right_container">
        <div id="map"></div>
        <div id="map-legend"></div>
        <p class="attribution align-right">Transit data provided by <a href=http://www.511.org target="_blank" rel="noopener">511.org</a></p>
      </div>
    </div>
  </div>
</section>

<div>
<p>
  This affordable housing list is compiled from many separate housing lists across Santa Clara County in order to provide a single searchable resource.  We strive to be as accurate as possible, but always confirm property details with the property manager.
</p>
</div>

<script>
  const markerLocations = [
  {%- for apartment in housingdb -%}
    {%- assign coords = apartment | getValidatedLocCoords -%}
    {%- if coords -%}
      {lat:{{coords[0]}},lng:{{coords[1]}},id:"{{apartment.id}}"},
    {%- endif -%}
  {%- endfor -%}
  ];
</script>
